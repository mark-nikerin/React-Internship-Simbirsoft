{"version":3,"sources":["assets/icons.svg","components/Sidebar/Hamburger/Hamburger.js","components/Sidebar/LanguageSelector/LanguageSelector.js","components/Sidebar/Menu/index.js","components/Sidebar/Menu/Menu.js","components/Sidebar/index.js","components/Sidebar/Sidebar.js","components/Slider/index.js","components/Slider/Slider.js","components/Main/index.js","components/Main/Main.js","pages/start.js","pages/order.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Hamburger","openMenu","useState","isOpen","setIsOpen","className","onClick","event","preventDefault","LanguageSelector","language","setLanguage","switchLanguage","Menu","isMenuOpen","width","height","xlinkHref","icons","Sidebar","setIsMenuOpen","shouldOpen","Slider","Main","href","StartPage","OrderPage","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ce7b10e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icons.bb1e911f.svg\";","import React, { useState } from \"react\";\r\nimport \"./hamburger.css\";\r\n\r\nconst Hamburger = ({openMenu}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const onClick = (event) => {\r\n    event.preventDefault();\r\n    openMenu(!isOpen);\r\n    setIsOpen(!isOpen); \r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={isOpen ?  \"hamburger_is-open\" : \"hamburger\"}\r\n      onClick={(event) => onClick(event)}\r\n    >\r\n      <div className=\"hamburger__box\">\r\n        <div className=\"hamburger__inner\"></div>\r\n      </div>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Hamburger;\r\n","import React, { useState } from \"react\";\r\nimport \"./languageSelector.css\";\r\n\r\nconst LanguageSelector = () => {\r\n  const [language, setLanguage] = useState(\"Eng\");\r\n\r\n  const switchLanguage = (event) => {\r\n    event.preventDefault();\r\n    language === \"Eng\" ? setLanguage(\"Рус\") : setLanguage(\"Eng\");\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"languageSelector\"\r\n      onClick={(event) => {\r\n        switchLanguage(event);\r\n      }}\r\n    >\r\n      <span className=\"unselectable\">{language}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LanguageSelector;\r\n","import Menu from \"./Menu\"\r\n\r\nexport default Menu;","import React from \"react\";\r\nimport \"./menu.css\";\r\nimport icons from \"../../../assets/icons.svg\";\r\n\r\nconst Menu = ({ isMenuOpen }) => { \r\n  return (\r\n    <>\r\n      <div className={isMenuOpen ? \"menu\" : \"menu_hidden\"}>\r\n        <li className=\"menu__list\">\r\n          <ul>ПАРКОВКА</ul>\r\n          <ul>СТРАХОВКА</ul>\r\n          <ul>БЕНЗИН</ul>\r\n          <ul>ОБСЛУЖИВАНИЕ</ul>\r\n        </li>\r\n        <div className=\"menu__social-icons\">\r\n          <svg className=\"menu__social-icon\" width=\"32\" height=\"32\">\r\n            <use xlinkHref={`${icons}#telegram`}></use>\r\n          </svg>\r\n          <svg className=\"menu__social-icon\" width=\"32\" height=\"32\">\r\n            <use xlinkHref={`${icons}#facebook`}></use>\r\n          </svg>\r\n          <svg className=\"menu__social-icon\" width=\"32\" height=\"32\">\r\n            <use xlinkHref={`${icons}#instagram`}></use>\r\n          </svg>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={isMenuOpen ? \"transparent-menu\" : \"transparent-menu_hidden\"}\r\n      ></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import Sidebar from \"./Sidebar\";\r\n\r\nexport default Sidebar;","import React, {useState} from \"react\";\r\nimport Hamburger from \"../Sidebar/Hamburger/Hamburger\";\r\nimport LanguageSelector from \"./LanguageSelector/LanguageSelector\";\r\nimport Menu from \"./Menu\"\r\nimport \"./sidebar.css\";\r\n\r\nconst Sidebar = () => {\r\n\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n\r\n  const openMenu = (shouldOpen) => { \r\n    setIsMenuOpen(shouldOpen);\r\n  }\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <Hamburger openMenu = {openMenu} /> \r\n      <Menu isMenuOpen = {isMenuOpen}/>\r\n      <LanguageSelector />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import Slider from \"./Slider\"\r\n\r\nexport default Slider;","import React from \"react\";\r\nimport \"./slider.css\";\r\nimport icons from \"../../assets/icons.svg\";\r\n\r\nconst Slider = () => {\r\n  return (\r\n    <div className=\"slider\">\r\n      <button className=\"slider__arrow\">\r\n        <svg className=\"slider__arrow-icon\" width=\"10\" height=\"20\">\r\n          <use xlinkHref={`${icons}#arrow-left`}></use>\r\n        </svg>\r\n      </button>\r\n      <div className=\"slider__content\">\r\n        <div className=\"slider__content_item\">\r\n          <h1>Бесплатная парковка</h1>\r\n          <h3>Оставляйте машину на платных городских парковках и разрешенных местах, не нарушая ПДД, а также в аэропортах.</h3>\r\n          <button className=\"slider__button-1\">\r\n            <span>Подробнее</span>\r\n          </button>\r\n        </div>\r\n        <div className=\"slider__dots\">\r\n          <div className=\"slider__dot_active\"></div>\r\n          <div className=\"slider__dot\"></div>\r\n          <div className=\"slider__dot\"></div>\r\n          <div className=\"slider__dot\"></div>\r\n        </div>\r\n      </div>\r\n      <button className=\"slider__arrow\">\r\n        <svg className=\"slider__arrow-icon\" width=\"10\" height=\"20\" >\r\n          <use xlinkHref={`${icons}#arrow-right`}></use>\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","import Main from \"./Main\"\r\n\r\nexport default Main;","import React from 'react'\r\nimport \"./main.css\"\r\nimport icons from \"../../assets/icons.svg\"\r\n\r\nconst Main = () => {\r\n  return(\r\n    <div className=\"main\">\r\n      <div className=\"main__header\">\r\n        <h1 className=\"unselectable\">Need for drive</h1>\r\n        <div className=\"location\">\r\n          <svg className=\"location__icon\" width=\"18\" height=\"20\">\r\n            <use xlinkHref={`${icons}#location`}></use>\r\n          </svg>\r\n          <span>Ульяновск</span>\r\n        </div> \r\n      </div>\r\n      <div className=\"main__content\">\r\n        <h1 className=\"unselectable\">Каршеринг</h1>\r\n        <h2 className=\"unselectable\" >Need for drive</h2>\r\n        <h3 className=\"unselectable\" >Поминутная аренда авто твоего города</h3>\r\n        <button className=\"button\">\r\n          <span>Забронировать</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"main__footer\">\r\n        <span>© 2016-2019 «Need for drive»</span>\r\n        <a href=\"tel:84952342244\">8 (495) 234-22-44</a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from \"react\"\r\nimport Sidebar from \"../components/Sidebar\"\r\nimport Slider from \"../components/Slider\"\r\nimport Main from \"../components/Main\" \r\nimport \"./start.css\"\r\n \r\nconst StartPage = () => {\r\n  return (\r\n    <div className=\"start\">\r\n      <Sidebar /> \r\n      <Main /> \r\n      <Slider />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StartPage;","import React from 'react'\r\n\r\nconst OrderPage = () => {\r\n  return (\r\n    <div></div>\r\n  );\r\n}\r\n\r\nexport default OrderPage;","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport StartPage from \"./pages/start\";\r\nimport OrderPage from \"./pages/order\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/React-Internship-Simbirsoft/\" component={StartPage} />\r\n        <Route exact path=\"/React-Internship-Simbirsoft/order\" component={OrderPage} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './normalize.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}